// DroidMate, an automated execution generator for Android apps.
// Copyright (C) 2012-2018. Saarland University
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.
//
// Current Maintainers:
// Nataniel Borges Jr. <nataniel dot borges at cispa dot saarland>
// Jenny Hotzkow <jenny dot hotzkow at cispa dot saarland>
//
// Former Maintainers:
// Konrad Jamrozik <jamrozik at st dot cs dot uni-saarland dot de>
//
// web: www.droidmate.org
import org.gradle.api.tasks.testing.logging.TestExceptionFormat
import org.gradle.api.tasks.testing.logging.TestLogEvent
import org.gradle.api.tasks.testing.logging.TestLoggingContainer

buildscript {
	repositories {
		mavenCentral()
	}
	apply from: file("../versions.gradle") // contains kotlin_version
	dependencies {
		classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${project.ext.kotlin_version}"
	}
}

apply from: file("../versions.gradle") // contains kotlin_version
apply plugin: 'kotlin'

repositories {
	mavenCentral()
	jcenter()
	mavenLocal()
	maven { url = "https://jitpack.io" }
}

dependencies {

	implementation("com.github.natanieljr:konrads_utilities:$utilities_version") {
		exclude group: "org.slf4j", module: "slf4j-simple"
	}

	implementation 'org.zeroturnaround:zt-exec:1.9'

	implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
	implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
	testImplementation "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
	testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"

	testImplementation "junit:junit:4.12"

}

task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = 'sources'
	from sourceSets.main.allSource
}

artifacts {
	archives sourcesJar
}

test.configure {
	it.testLogging { TestLoggingContainer tl ->
		tl.exceptionFormat = TestExceptionFormat.FULL
		tl.events(TestLogEvent.FAILED, TestLogEvent.SKIPPED)
		tl.showStandardStreams = true
	}
}
