// DroidMate, an automated execution generator for Android apps.
// Copyright (C) 2012-2018. Saarland University
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.
//
// Current Maintainers:
// Nataniel Borges Jr. <nataniel dot borges at cispa dot saarland>
// Jenny Hotzkow <jenny dot hotzkow at cispa dot saarland>
//
// Former Maintainers:
// Konrad Jamrozik <jamrozik at st dot cs dot uni-saarland dot de>
//
// web: www.droidmate.org
apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions' // necessary for the IDE to resolve android internal instrumentation API methods
apply plugin: 'project-report'

apply from: file("../../../versions.gradle")

buildscript {
	apply from: file("../../../versions.gradle")
	ext.kotlin_version = project.ext.kotlin_version
	repositories {
		google()
		jcenter()
	}
	dependencies {
		classpath 'com.android.tools.build:gradle:3.6.1'
		classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${project.ext.kotlin_version}"
	}
}

wrapper{
	gradleVersion = '5.3'  //define what gradle wrapper version is to be used on wrapper initialization (only if there is no wrapper yet or 'gradlew wrapper' is called)
}

android {
	compileSdkVersion project.ext.androidCompileSdkVersion
	buildToolsVersion project.ext.androidBuildToolsVersion
	defaultConfig {
		applicationId "org.droidmate.uiautomator2daemon.UiAutomator2Daemon"
		minSdkVersion project.ext.androidMinSdkVersion
		targetSdkVersion project.ext.androidTargetSdkVersion
		versionCode 1
		versionName "1.0"
		multiDexEnabled true
		testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

		lintOptions {
			abortOnError false
		}
	}
	buildTypes {
		release {
			minifyEnabled false
			proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
		}
	}
	productFlavors {
	}
}

repositories {
	mavenCentral()
	jcenter()

	maven {
		url "https://maven.google.com"
	}
	google()
	maven { url 'https://jitpack.io' }
//	mavenLocal()
}

configurations.all {
	resolutionStrategy.dependencySubstitution {
		def targetProject = findProject(":deviceDaemonLib")
//		if (targetProject != null) {
//			def substitution = substitute module("com.github.hotzkow:platformInterfaceLib") with project(":deviceDaemonLib")
//			if(substitution != null)
//				substitution because "use local git submodule for development instead of external dependency"
//		}
	}
}
dependencies {
//	implementation group: 'org.droidmate', name: 'deviceDaemonLib', version: project.ext.driverLib_version
//	implementation(dmDriverLib) {
//		version {
//			strictly driverLib_version
//		}
//	}
	implementation project(":deviceDaemonLib")
	def core_version = "1.5.0"

	implementation "androidx.core:core:$core_version"
	// Testing-only dependencies
	testImplementation 'junit:junit:4.12'
	// Force usage of support annotations in the test app, since it is internally used by the runner module.
	//noinspection GradleDependency  // do not update right now or the build will fail
	androidTestImplementation 'com.android.support.test:runner:1.0.1'

	// UiAutomator Testing
	//androidTestImplementation 'androidx.test.uiautomator:uiautomator:2.2.0'
	androidTestImplementation 'com.android.support.test.uiautomator:uiautomator-v18:2.1.3'
	implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
	implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:${project.ext.coroutines_version}"
	implementation "org.jetbrains.kotlin:kotlin-reflect:${project.ext.kotlin_version}"

	testImplementation "org.jetbrains.kotlin:kotlin-test:${project.ext.kotlin_version}"
	testImplementation "org.jetbrains.kotlin:kotlin-test-junit:${project.ext.kotlin_version}"

}
